var __create = Object.create;
var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __require = /* @__PURE__ */ ((x) => typeof require !== "undefined" ? require : typeof Proxy !== "undefined" ? new Proxy(x, {
  get: (a, b) => (typeof require !== "undefined" ? require : a)[b]
}) : x)(function(x) {
  if (typeof require !== "undefined")
    return require.apply(this, arguments);
  throw new Error('Dynamic require of "' + x + '" is not supported');
});
var __esm = (fn, res) => function __init() {
  return fn && (res = (0, fn[Object.keys(fn)[0]])(fn = 0)), res;
};
var __commonJS = (cb, mod) => function __require2() {
  return mod || (0, cb[Object.keys(cb)[0]])((mod = { exports: {} }).exports, mod), mod.exports;
};
var __export = (target, all) => {
  __markAsModule(target);
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module, desc) => {
  if (module && typeof module === "object" || typeof module === "function") {
    for (let key of __getOwnPropNames(module))
      if (!__hasOwnProp.call(target, key) && key !== "default")
        __defProp(target, key, { get: () => module[key], enumerable: !(desc = __getOwnPropDesc(module, key)) || desc.enumerable });
  }
  return target;
};
var __toModule = (module) => {
  return __reExport(__markAsModule(__defProp(module != null ? __create(__getProtoOf(module)) : {}, "default", module && module.__esModule && "default" in module ? { get: () => module.default, enumerable: true } : { value: module, enumerable: true })), module);
};

// ../../node_modules/.pnpm/tsup@5.11.13_typescript@4.6.2/node_modules/tsup/assets/esm_shims.js
import { fileURLToPath } from "url";
import path from "path";
var getFilename, getDirname, __dirname, __filename;
var init_esm_shims = __esm({
  "../../node_modules/.pnpm/tsup@5.11.13_typescript@4.6.2/node_modules/tsup/assets/esm_shims.js"() {
    getFilename = () => fileURLToPath(import.meta.url);
    getDirname = () => path.dirname(getFilename());
    __dirname = /* @__PURE__ */ getDirname();
    __filename = /* @__PURE__ */ getFilename();
  }
});

// node/utils.ts
init_esm_shims();
import { join } from "path";
import { ensurePrefix, slash } from "@antfu/utils";
import isInstalledGlobally from "is-installed-globally";
import { sync as resolve } from "resolve";
import globalDirs from "global-dirs";
function toAtFS(path2) {
  return `/@fs${ensurePrefix("/", slash(path2))}`;
}
function resolveImportPath(importName, ensure = false) {
  try {
    return resolve(importName, {
      preserveSymlinks: false
    });
  } catch {
  }
  if (isInstalledGlobally) {
    try {
      return __require.resolve(join(globalDirs.yarn.packages, importName));
    } catch {
    }
    try {
      return __require.resolve(join(globalDirs.npm.packages, importName));
    } catch {
    }
  }
  if (ensure)
    throw new Error(`Failed to resolve package "${importName}"`);
  return void 0;
}
function resolveGlobalImportPath(importName) {
  try {
    return resolve(importName, { preserveSymlinks: false, basedir: __dirname });
  } catch {
  }
  try {
    return __require.resolve(join(globalDirs.yarn.packages, importName));
  } catch {
  }
  try {
    return __require.resolve(join(globalDirs.npm.packages, importName));
  } catch {
  }
  throw new Error(`Failed to resolve global package "${importName}"`);
}
function stringifyMarkdownTokens(tokens) {
  return tokens.map((token) => {
    var _a;
    return (_a = token.children) == null ? void 0 : _a.filter((t) => ["text", "code_inline"].includes(t.type) && !t.content.match(/^\s*$/)).map((t) => t.content.trim()).join(" ");
  }).filter(Boolean).join(" ");
}
function generateGoogleFontsUrl(options) {
  const weights = options.weights.flatMap((i) => options.italic ? [`0,${i}`, `1,${i}`] : [`${i}`]).sort().join(";");
  const fonts = options.webfonts.map((i) => `family=${i.replace(/^(['"])(.*)\1$/, "$1").replace(/\s+/g, "+")}:${options.italic ? "ital," : ""}wght@${weights}`).join("&");
  return `https://fonts.googleapis.com/css2?${fonts}&display=swap`;
}

export {
  __spreadValues,
  __spreadProps,
  __require,
  __commonJS,
  __export,
  __toModule,
  __dirname,
  __filename,
  init_esm_shims,
  toAtFS,
  resolveImportPath,
  resolveGlobalImportPath,
  stringifyMarkdownTokens,
  generateGoogleFontsUrl
};
